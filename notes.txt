If you use CoAPthon software in your research, please cite:

G.Tanganelli, C. Vallati, E.Mingozzi, "CoAPthon: Easy Development of CoAP-based IoT Applications with Python", IEEE World Forum on Internet of Things (WF-IoT 2015)

Software available at https://github.com/Tanganelli/CoAPthon


def _recursive(x):
    try:
        osc.send_message(b'/ping', x)
    except:
        # reallocate the memory with one fewer byte
        PyMem_Realloc(x, sys.getsizeof(x) - 1)
        _recursive(x)

x = PyMem_Malloc(2084100)
_recursive(x)


oscli send --host "192.168.1.85" --port 5555 --encoding "utf8" "/ping" "whatever"

osc.__dir__()
['address', 'port', 'sock', 'encoding', 'encoding_errors',
'stats', '__module__', '__doc__', '__init__', 'send_message',
'send_bundle', '__dict__', '__weakref__', '__repr__', '__hash__',
'__str__', '__getattribute__', '__setattr__', '__delattr__', '__lt__',
'__le__', '__eq__', '__ne__', '__gt__', '__ge__', '__new__',
'__reduce_ex__', '__reduce__', '__subclasshook__', '__init_subclass__',
'__format__', '__sizeof__', '__dir__', '__class__']


https://stackoverflow.com/questions/22819214/udp-message-too-long
OSX has an internal UDP limit of 9253. This can be changed by running the following.
sudo sysctl -w net.inet.udp.maxdgram=65535



#### from oscpy-client

# osc = OSCClient("192.168.1.85", 5555, encoding='utf8')   # JA
#osc = OSCClient("73.131.93.124", 5555, encoding='utf8')  # Jared

# file = open('../../tides.json', 'r')
# x = file.read()
# str = "x"*65000   ### generates a string taking up 65049 bytes in memory

# with open('../../tides.json') as f:
#   data = json.load(f)

### debug ###
# print("size of text file", sys.getsizeof(x))
# print("size of x*65000", sys.getsizeof(str))
# print("size of x[0:9203]", sys.getsizeof(x[0:9203]))
### debug ###

# osc.send_message('/ping', [bytes(x[0:9203], 'utf-8')], safer=True)

### this will only work if you have run the following command:
###     sudo sysctl -w net.inet.udp.maxdgram=65535
#osc.send_message('/ping', [x[0:65000]], safer=True)

# for i in range(len(data['allTides'])):
#     list = []
#     list.append(data['allTides'][i]['time'])
#     list.append(data['allTides'][i]['height'])
#     osc.send_message(b'/ping', list)
